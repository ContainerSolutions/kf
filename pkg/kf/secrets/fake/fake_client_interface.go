// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleCloudPlatform/kf/pkg/kf/secrets/fake (interfaces: ClientInterface)

// Package fake is a generated GoMock package.
package fake

import (
	secrets "github.com/GoogleCloudPlatform/kf/pkg/kf/secrets"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// FakeClientInterface is a mock of ClientInterface interface
type FakeClientInterface struct {
	ctrl     *gomock.Controller
	recorder *FakeClientInterfaceMockRecorder
}

// FakeClientInterfaceMockRecorder is the mock recorder for FakeClientInterface
type FakeClientInterfaceMockRecorder struct {
	mock *FakeClientInterface
}

// NewFakeClientInterface creates a new mock instance
func NewFakeClientInterface(ctrl *gomock.Controller) *FakeClientInterface {
	mock := &FakeClientInterface{ctrl: ctrl}
	mock.recorder = &FakeClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *FakeClientInterface) EXPECT() *FakeClientInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *FakeClientInterface) Create(arg0 string, arg1 ...secrets.CreateOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Create", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *FakeClientInterfaceMockRecorder) Create(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*FakeClientInterface)(nil).Create), varargs...)
}

// Delete mocks base method
func (m *FakeClientInterface) Delete(arg0 string, arg1 ...secrets.DeleteOption) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Delete", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *FakeClientInterfaceMockRecorder) Delete(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*FakeClientInterface)(nil).Delete), varargs...)
}

// Get mocks base method
func (m *FakeClientInterface) Get(arg0 string, arg1 ...secrets.GetOption) (map[string][]byte, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0}
	for _, a := range arg1 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Get", varargs...)
	ret0, _ := ret[0].(map[string][]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *FakeClientInterfaceMockRecorder) Get(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0}, arg1...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*FakeClientInterface)(nil).Get), varargs...)
}
