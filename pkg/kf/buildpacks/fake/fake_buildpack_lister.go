// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GoogleCloudPlatform/kf/pkg/kf/buildpacks/fake (interfaces: BuildpackLister)

// Package fake is a generated GoMock package.
package fake

import (
	buildpacks "github.com/GoogleCloudPlatform/kf/pkg/kf/buildpacks"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// FakeBuildpackLister is a mock of BuildpackLister interface
type FakeBuildpackLister struct {
	ctrl     *gomock.Controller
	recorder *FakeBuildpackListerMockRecorder
}

// FakeBuildpackListerMockRecorder is the mock recorder for FakeBuildpackLister
type FakeBuildpackListerMockRecorder struct {
	mock *FakeBuildpackLister
}

// NewFakeBuildpackLister creates a new mock instance
func NewFakeBuildpackLister(ctrl *gomock.Controller) *FakeBuildpackLister {
	mock := &FakeBuildpackLister{ctrl: ctrl}
	mock.recorder = &FakeBuildpackListerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *FakeBuildpackLister) EXPECT() *FakeBuildpackListerMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *FakeBuildpackLister) List(arg0 ...buildpacks.BuildpackListOption) ([]string, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "List", varargs...)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *FakeBuildpackListerMockRecorder) List(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*FakeBuildpackLister)(nil).List), arg0...)
}
